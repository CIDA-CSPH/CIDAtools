% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OPPFunctions.R
\name{ctcrw_interpolation}
\alias{ctcrw_interpolation}
\title{Interpolate GPS locations at a set time interval using a continuous time correlated
random walk (ctcrw) model}
\usage{
ctcrw_interpolation(
  data,
  site,
  type = "Complete",
  timestep = "20 min",
  showPlots = T,
  theta = c(8, 2)
)
}
\arguments{
\item{data}{Trip data ouptut from OPPTools::opp_get_trips().}

\item{site}{Vector containing coordinates of the study site, in the same
format as site information returned by OPPtools::opp2KBA or track2KBA::move2KBA.}

\item{type}{List indicating the types of trips to include in interpolation.
Possible values are: 'Complete', 'Incomplete', 'Gappy', and 'Non-trip'. Default is 'Complete'.}

\item{timestep}{string indicating time step for track interpolation, eg. '10 min', '1 hour', '1 day'}

\item{showPlots}{TRUE/FALSE should plots of interpolated tracks against original data be produced}

\item{theta}{starting values for ctcrw parameter optimization, see ?crawl::crwMLE for details}
}
\description{
This function is a wrapper for momentuHMM::crawlWrap(), which
uses the crawl package to fit ctcrw model to GPS tracks at a user-defined
time interval. The function is currently designed to handle GPS data from
central place foraging birds. It takes tracking data, where trips have been
identified and classified using OPPTools::opp_get_trips(). The function
returns a list with four objects: (1) original tracking data (as SPDF),
(2) colony location (as SPDF), (3) interpolated locations (as SPDF), and (4)
a list of CRAWL fits for each trip. All spatial objects are in the same custom
Lambert equal area projection centered on the colony.
}
\examples{
my_data <- opp_download_data(study = c(1247096889),login = NULL, start_month = NULL,
                            end_month = NULL,season = NULL)

my_track2kba <- opp2KBA(data = my_data)

my_trips <- opp_get_trips(data = my_track2kba, innerBuff  = 5, returnBuff = 20,
                         duration  = 2, gapLimit = 100, missingLocs = 0.2,
                         showPlots = TRUE)

my_interp <- ctcrw_interpolation(data = my_trips,
                                site = my_track2kba$site,
                                type = c('Complete','Incomplete'),
                                timestep = '10 min',
                                showPlots = T,
                                theta = c(8,2)
)
}
