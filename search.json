[{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"CIDAtools ","text":"package contains numerous templates tools make life CIDA (part Colorado School Public Health) happier efficient! install CIDAtools local machine:","code":"# install.packages(\"devtools\") devtools::install_github('CIDA-CSPH/CIDAtools')"},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"creating-a-new-project","dir":"","previous_headings":"","what":"Creating a new project","title":"CIDAtools ","text":"CIDAtools installed, new CIDA project can created using Rstudio GUI (File>New Project>New Directory>New CIDA Project). , create new project folder structure R console, navigate main project directory, run: Feel free set project name, PI, analyst via ProjectName, PI, analyst arguments respectively, see ?create_project details. specified, stored text hidden subdirectory called .ProjData, can called subsequent R code anywhere project using ProjectName(), ProjectPI(), ProjectAnalyst().","code":"create_project()"},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"creating-a-new-cida-report","dir":"","previous_headings":"","what":"Creating a new CIDA report","title":"CIDAtools ","text":"Templates useful creating new documents correct CIDA formatting. CIDAtools includes templates can make easy create new CIDA report. use functionality Rstudio, first ensure package installed, : Click “New R Markdown” pop-, select “template” see CIDA report templates choose . Alternatively, source code templates available inst/rmarkdown/templates/. Note: CIDA Word report template contains multiple files, needed specify format Word output. Therefore, CIDA Word reports must subdirectory start.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"outlines-for-cida-reports","dir":"","previous_headings":"","what":"Outlines for CIDA reports","title":"CIDAtools ","text":"Outlines intended provide idea content necessary within type CIDA report. CIDAtools includes outlines following reports inst/outlines/: CIDA Analysis Plan [download] CIDA Comprehensive Report [download] CIDA Exploratory Report [download] CIDA Omics Study Report [download] CIDA Study Design [download]","code":""},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"backing-up-cida-projects","dir":"","previous_headings":"","what":"Backing up CIDA projects","title":"CIDAtools ","text":"CIDA project data reports either kept CIDA shared drive (P drive), backed (.e. copied) shared drive regular basis. Since P drive can sometimes slow read/write , CIDA members can work project locally regularly back project P drive. help , ’ve written function backup_project automatically back project folder P drive (“Projects” subdirectory default, can specified subdir_to argument). Alternatively, main project folder can simply copied pasted P drive manually. Within project directory, run: copy entire local project (files directories) project name P drive. backup_info.md file also produced indicates backup performed. project directory already exists P drive, files/directories changed since last backup copied . speeds process. Files located backup directory project directory deleted. means large files, anytime rename re-run backup function, storage needed double since files remain backup folder. avoid , specify recreate = TRUE fully recreate current directory ground .","code":"backup_project()"},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"CIDAtools ","text":"package website available . plan keep track SAS macros useful R packages Article (package vignettes).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"using-snippets","dir":"","previous_headings":"","what":"Using snippets","title":"CIDAtools ","text":"CIDA functions can used snippets (header snippet already Rstudio options): Example header snippet using Project Data:","code":"snippet header     ###########################################     # Project: `r CIDAtools::ProjectName()`     # Author: `r CIDAtools::ProjectAnalyst()`     # Date: `r paste(format(Sys.Date(), '%m/%d/%Y'))`     # #########################################"},{"path":"https://cida-csph.github.io/CIDAtools/ReadMe.html","id":"other-functionality","dir":"","previous_headings":"","what":"Other functionality","title":"CIDAtools ","text":"package also contains functions reading excel files color columns Table1 function. Please feel free file issue request encounter errors like request new features. reporting bug, please provide reproducible example.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CIDA Computing Resources","text":"document introduces available computing resources guidelines linkes access/request . apply : members CIDA (Professor, RA, RI, Senior RI, PRA, Senior PRA)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"computing-resources-available-to-cida-members","dir":"Articles","previous_headings":"","what":"Computing Resources Available to CIDA Members","title":"CIDA Computing Resources","text":"table lists computing resources available CIDA members. Please note none computing resources HIPPA compliant therefore PHI can stored machines. (please see data storage guideline information). SLCE machines HIPAA compliant Backups available via Wasabi: https://wasabi.com/hot-cloud-storage/.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"personal-computer","dir":"Articles","previous_headings":"Computing Resources Available to CIDA Members","what":"Personal Computer","title":"CIDA Computing Resources","text":"CIDA provides members PC Macintosh based preference.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"cida-slce","dir":"Articles","previous_headings":"Computing Resources Available to CIDA Members","what":"CIDA SLCE","title":"CIDA Computing Resources","text":"SLCE local computing resource funded CIDA (BERDxxxx) consists 5 workstations address computing resources required vriety tasks.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"alpine","dir":"Articles","previous_headings":"Computing Resources Available to CIDA Members","what":"Alpine","title":"CIDA Computing Resources","text":"Alpine University Colorado Boulder Research Computing’s third-generation high performance computing (HPC) cluster. Alpine heterogeneous compute cluster currently composed hardware provided University Colorado Boulder, Colorado State University, Anschutz Medical Campus. Alpine currently offers 317 compute nodes total 18,080 cores. Alpine can securely accessed anywhere, anytime using OpenOnDemand ssh connectivity CURC system. Step--step instruction access Alpine available : https://curc.readthedocs.io/en/latest/clusters/alpine/quick-start.html","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/CIDA_computing_resources.html","id":"useful-links","dir":"Articles","previous_headings":"","what":"Useful Links","title":"CIDA Computing Resources","text":"Health Insurance Portability Accountability Act (HIPAA):http://www.hhs.gov/hipaa/-professionals/index.html Guidance Regarding Methods De-identification Protected Health Information Accordance Health Insurance Portability Accountability Act (HIPAA) Privacy Rule:http://www.hhs.gov/hipaa/-professionals/privacy/special-topics/de-identification/index.html","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/alpine.html","id":"introduction","dir":"Articles","previous_headings":"Alpine","what":"Introduction","title":"Alpine HPC","text":"document provides brief overview Alpine, University Colorado’s High Performance Computing Cluster (HPC). Alpine allows researchers across campus access >18k computer cores, high memory computing cores, specialized hardware like GPUs. available University Colorado Anschutz employees students. General documentation Alpine can found https://curc.readthedocs.io/en/latest/clusters/alpine/index.html# apply : members CIDA (Professor, RA, RI, Senior RI, PRA, Senior PRA)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/alpine.html","id":"definitions","dir":"Articles","previous_headings":"Alpine","what":"Definitions","title":"Alpine HPC","text":"HPC high performance computing RMACC Rocky Mountain Advanced Computing Consortium ACCESS-CI Advanced Cyberinfrastructure Coordination Ecosystem: Services & Support - Cyberinfrastructure XSEDE Extreme Science Engineering Discovery Environment","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/alpine.html","id":"accessing-alpine","dir":"Articles","previous_headings":"Alpine","what":"Accessing Alpine","title":"Alpine HPC","text":"Getting Alpine account 4-step process detailed https://curc.readthedocs.io/en/latest/access/rmacc.html CU Anschutz members request access members Rocky Mountain Advanced Computing Consortium (RMACC). done first requesting ACCESS-CI account https://identity.access-ci.org/new-user ACCESS XSEDE username institutional affiliation (e.g., “University Awesome”) role (undergraduate graduate student, postdoc, staff, instructor, faculty affiliated faculty) department first last name preferred email address communication receive email confirmation detailed instructions use Alpine. may take weeks receive confirmation sending email Step 2. Now can log onto Alpine! Note, currently CU Anscutz members, way access Alpine via OnDemand web browser ssh access allowed time.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/alpine.html","id":"alpine-hardware","dir":"Articles","previous_headings":"Alpine","what":"Alpine Hardware","title":"Alpine HPC","text":"comprehensive list hardware available Alpine can found https://curc.readthedocs.io/en/latest/clusters/alpine/alpine-hardware.html. Specific hardware available CU Anschutz memebers provided account created.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/alpine.html","id":"quick-start","dir":"Articles","previous_headings":"Alpine","what":"Quick Start","title":"Alpine HPC","text":"quick start guide can found https://curc.readthedocs.io/en/latest/clusters/alpine/quick-start.html. Much detailed information provided account creation confirmation email sent rc-help@colorado.edu.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"coding-guidelines-and-best-practices","dir":"Articles","previous_headings":"","what":"Coding Guidelines and Best Practices","title":"CIDA-coding-guidelines","text":"Except binary machine code, computer code intended read humans.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"summary","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Summary","title":"CIDA-coding-guidelines","text":"Within CIDA project, code follow CIDA’s standard organizational structure consistently tracked Git repository CIDA’s GitHub server. Strive use best practices coding conventions.","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"file-organization","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > CIDA Standards for Organization","what":"File Organization","title":"CIDA-coding-guidelines","text":"Files organized fit within general CIDA file structure. Within root location project found folders: Admin – administrative files go (.e., SOW) Background – background documents go Code – code goes DataProcessed – data goes manipulation statistician DataRaw – raw data goes investigator Dissemination – files go sent investigator, state sent Reports – reports, figures, output goes Within Code/* code files labelled usable way ordered, example 00_prep.R 01_dataread.R 01a_dataread_auxilliary.R 02_dataclean.R … conclusion project files labelled last version used; used together sequence result final project results.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"experimental-code","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > CIDA Standards for Organization","what":"Experimental code","title":"CIDA-coding-guidelines","text":"code final scripts project conclusion archival able run sequence achieve result code included result ‘experimental’ placed separate file, commented left main scripts","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"naming-conventions","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Suggestions for easier comprehension","what":"Naming Conventions","title":"CIDA-coding-guidelines","text":"Names follow one following naming conventions consistently within script (exception pre-existing column titles databases), concise meaningful. Avoid naming objects similar names standard functions. alllowercase – lowercase letters period.separated – words separated periods underscore_separated – words separated underscores camelCase – words denoted capital letters","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"functions","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Suggestions for easier comprehension","what":"Functions","title":"CIDA-coding-guidelines","text":"find copying pasting code frequently, ’d likely benefit creating function. Read key ideas behind R functions . Functions beyond trivial wrappers start header describes function, input(s) output(s) pertinent information function. User-created functions named distinctly common functions. Returns functions done explicitly, rely implicit returns. Name created functions descriptive verb use nouns objects.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"commenting","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Suggestions for easier comprehension","what":"Commenting","title":"CIDA-coding-guidelines","text":"start script file start header containing least title, author, date created, purpose script. Sections code denoted headers consistent formatting. complex involved code commented . non-standard choices analysis commented comment include reference done decision made. Comments , .","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"best-practices","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Best practices","title":"CIDA-coding-guidelines","text":"section describes best practices R, R Markdown, general coding. meant “enforced”, followed, make (CIDA collaborators’) lives easier later .","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"r-scripts--r-files","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Best practices","what":"R Scripts (.R files)","title":"CIDA-coding-guidelines","text":"Avoid using attach(), use () instead another alternative. Outside function calls, use <-, =, assignment. use right-hand assignment (e.g., don’t : 1 -> x) non-ubiquitous R packages, avoid using library(), instead use :: operator calling functions specific libraries, e.g., CIDAtools::pvalr. Place spaces around infix operators (+, -, =, <-) commas (). Use RStudio’s Projects avoid ever set working directory R scripts. , use setwd() top script. Use pipe operator (%>%), reasons described , keep pipes 10 steps. Break large sequences intermediate objects meaningful names.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"r-markdown--rmd-files","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Best practices","what":"R Markdown (.Rmd files)","title":"CIDA-coding-guidelines","text":"Familiarize R Markdown’s vast array options features. Ensure notebook descriptive title, evocative filename, first paragraph briefly describes aims analysis. finish day, make sure can knit notebook (’re using caching, make sure clear caches). let fix problems code still fresh mind. also good time push new day’s code GitHub (haven’t already). want code reproducible long-run (.e. can come back run next month next year), ’ll need track versions packages code uses. purpose, include chunk end notebook (appendix) runs sessionInfo(). need reproduce report entirety versions packages, know package versions need, reinstall CRAN.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"general-best-practices-for-programming","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices > Best practices","what":"General best practices for programming","title":"CIDA-coding-guidelines","text":"discover error data file, modify directly, instead write code correct value. Explain (comments) made fix. Use ISO8601 YYYY-MM-DD format dates ’s ambiguity. Keep code 80 characters less per line. Exceptions exist hard-coded constants (path names URLs) easily wrapped shortened. Program files always ASCII text files. Program files always immediately source-able R SAS. source file directly R (SAS), file format acceptable. Word processing programs like Microsoft Word save files text files – save code Word documents. Use monospace font write display code. Variable space fonts like Times New Roman can alter apparent structure program (readability). Consistently indent code. Comments indented level indentation code comment pertains. Comments can also appear end code line space permits. objects/functions code, strive names concise meaningful. Similarly, ensure script names also concise meaningful.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"workflow-best-practices","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Workflow best practices","title":"CIDA-coding-guidelines","text":"Quote R Data Science: One day need quit R, go something else return analysis next day. One day working multiple analyses simultaneously use R want keep separate. One day need bring data outside world R send numerical results figures R back world. handle real life situations, need make two decisions: 1) analysis “real”, .e. save lasting record happened? 2) analysis “live”? Initially, may consider analysis live R environment (e.g. objects listed environment pane). However, ’s much easier recreate environment R script recreate R script environment! analysis therefore lives code. , haven’t already, instruct RStudio never preserve workspace sessions foster attitude make life easier long-term.  changing , notice restart RStudio remember results code ran last time, remember – analysis lives code. working within Rstudio Project, usually worry absolute vs relative file paths (files automatically saved/loaded location main project (subdirectories). However, knitting R Markdown file Reports/* subdirectory /loading files elsewhere, may consider wrapping file paths inside () function (package) ensure file paths work anticipated. data live external server, may need point server reading data (absolute file path) rather saving DataRaw/*. case, please indicate project readme file (DataRaw/* information data exists (contact email address owners/maintainers server).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"useful-reporting-functions-the-cidatools-r-package","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Useful reporting functions: The CIDAtools R Package","title":"CIDA-coding-guidelines","text":"CIDAtools R package, available , suite useful functions makes producing CIDA reports easier. readme package also information reporting templates/outlines. Please see package documentation information, contact committee chair suggestions making package useful.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"where-to-store-your-code","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Where to store your code","title":"CIDA-coding-guidelines","text":"project files + code, exception data, can stored anywhere (locally, OneDrive, etc). Project code must tracked Git repository regularly pushed GitHub. (see ) Project data (stored DataRaw/ DataProcessed/) backed CIDA drive least weekly; see committee’s data storage guidelines CIDAtools::BackupProject().","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"tracking-codefiles-in-git-and-github","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Tracking code/files in Git and GitHub","title":"CIDA-coding-guidelines","text":"code files committed pushed GitHub regularly (daily recommended). Data tracked Git. Ensure repository text file titled .gitignore main level tells Git software track data related files file types. See sample .gitignore file ignores CSV, XLSX files, well files stored DataProcessed DataRaw subdirectories. Contact Ryan Peterson SOM issues related GitHub, SOM .","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/coding_guidelines.html","id":"useful-links","dir":"Articles","previous_headings":"Coding Guidelines and Best Practices","what":"Useful Links","title":"CIDA-coding-guidelines","text":"R Data Science Google style guide Sample .gitignore file, stored project-level directory (top level git repository):","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/cron-jobs.html","id":"introduction","dir":"Articles","previous_headings":"Cron Jobs","what":"Introduction","title":"Cron Jobs","text":"document provides description run cron jobs biostats server (computation server part Dept. Biostatistics Informatics). idea cron job allows user schedule piece code executed. biostats server ideal place run “computer” always thus removes need analyst worry personal computer running time execute code. apply : members CIDA (Professor, RA, RI, Senior RI, PRA, Senior PRA)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/cron-jobs.html","id":"definitions","dir":"Articles","previous_headings":"Cron Jobs","what":"Definitions","title":"Cron Jobs","text":"None time","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/cron-jobs.html","id":"accessing-the-biostats-server","dir":"Articles","previous_headings":"Cron Jobs","what":"Accessing the biostats server","title":"Cron Jobs","text":"gain access biostats server contact Research Tools Committee. available members CIDA.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/cron-jobs.html","id":"steps-to-a-run-cron-job","dir":"Articles","previous_headings":"Cron Jobs","what":"Steps to a Run Cron Job","title":"Cron Jobs","text":"following specific CIDA biostats server based Linux. Although steps may seem complicated, needs set Research Tools Committee happy help . following example use cron job execute simple python script, cron.py, generates small array data saves . script called separate bash script, cron.sh. Note cron jobs run directly cron.py file, however bash script allows user provide extra information system make sure script run proper environment. setup cronjob need access crontab, file stores active cron jobs specific user. Enter file running crontab -e line file specify different cron job. run cron.sh every minute add following crontab file. Note, writing files Linux can daunting, Research Tools Committee can help ! */1 * * * * /home/biostats_share/mancchri/test_cron/cron.sh view list current cron jobs crontab use crontab -l delete cron job longer execute use crontab -r","code":"import time import numpy as np  a = [1,2,3,4] np.save(f\"{time.time()}.npy\",a) #!/bin/bash  # set to use the desired python Anaconda distibution  export PATH=/home/biostats_share/mancchri/anaconda3/bin:$PATH # make sure the system know to be in the directory below cd /home/biostats_share/mancchri/test_cron # run the script below python cron.py"},{"path":"https://cida-csph.github.io/CIDAtools/articles/cron-jobs.html","id":"resources","dir":"Articles","previous_headings":"Cron Jobs","what":"Resources","title":"Cron Jobs","text":"Information use cron job, especially set jobs run given interval see following https://tecadmin.net/crontab--linux--20-examples--cron-schedule/https://crontab.guru/examples.html","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"introduction","dir":"Articles","previous_headings":"CIDA Data Storage Tools","what":"Introduction","title":"CIDA-data-storage-guidelines","text":"document provides guidelines, recommendations, current best practices code, data, documents stored backed members CIDA. guidelines intended explain pros, cons, best practices data storage tools available CIDA members. However, CIDA member may come across exceptions guidelines, responsibility proper data handling within particular project rests CIDA member involved. apply : members CIDA (Professor, RA, RI, Senior RI, PRA, Senior PRA)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"definitions","dir":"Articles","previous_headings":"CIDA Data Storage Tools","what":"Definitions","title":"CIDA-data-storage-guidelines","text":"‘Code’ refers R, SAS, Stata, etc. (scripts stored plain text formatted files) ‘Data’ refers spreadsheets, tables, information used run analysis ‘Report’ refers document outlines results analysis sending investigator GitLab Lhotse CIDA GitLab repository, available (requires VPN connection) ‘Local storage’ refers university provided computer physical hard drive ‘External server’ refers server houses data runs analysis (except Lhotse) ‘Eureka’ Virtual Machine run Health Data Compass (HDC) ‘OneDrive Business’ refers Microsoft’s file-syncing software licensed University ‘HPC’ refers “High Performance Computing”","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"summary","dir":"Articles","previous_headings":"CIDA Data Storage Tools","what":"Summary","title":"CIDA-data-storage-guidelines","text":"CIDA (P) Drive required ongoing storage location project data. data storage locations may used temporarily course active work project.","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"local-computer","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"Local Computer","title":"CIDA-data-storage-guidelines","text":"files current projects can stored University provided PC Macintosh, computer’s hard drive encrypted. Data PID locally stored active work project. Pros: data projects load quickly stored locally. Cons: natural/default backup process, can hassle best security practices manually. keep project data computer working , often, ensure frequently save data CIDA drive. Prior travel laptop, old unneeded projects removed computer drive can restored upon return campus.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"cida-p-drive","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"CIDA (P) Drive","title":"CIDA-data-storage-guidelines","text":"MAC: smb://data.ucdenver.pvt/dept/SPH/SPH-CIDA/CIDA Windows: \\\\data.ucdenver.pvt\\dept\\SPH\\SPH-CIDA\\CIDA recently started trouble mapping drive, contact SOM-. CIDA project data must stored permanent basis (certain exceptions, e.g., projects larger > 16 GB collaboration dictates otherwise). CIDA/Branches: Long-standing collaborations, including operating MOUs, treated Branches, data stored subdirectory CIDA/Branches. CIDA/Projects: Data projects consulting arm (.e., P-number) stored subdirectory CIDA/Projects. Use form create folders P-drive specific permissions, form update permissions existing folder. forms directly sent SOM . CIDA/Shared directory accessible CIDA members gained approval data manager. Folders also accessible external users approved access. Files directories create shared drive inherit permissions parent folder. restrict access specific directories accordance data use agreements without help . files directories backed nightly; backups stored 30 days. Collaboration transfers data among CIDA members can quick easy. Data code easily findable CIDA administration team members case CIDA member’s continued absence. Con: working directly drive can slow, especially VPN. --date raw data projects available expected location drive least weekly, especially project conclusion, prior project actively worked . Eliminate redundancies intermediate data sets projects “big” data; store data need make code reports run. OK work directly CIDA drive cases speed concern. , know active projects copy data CIDA drive regularly (weekly), especially prior taking leave. CIDAtools R package, located , function BackupProject() can streamline process. default, function updates folders/files DataRaw/* DataProcessed/* changed, take long. CIDA pays server storage per-GB-month basis, cognizant size data utilized projects. possible, project’s scope work charge data sets project materials anticipated fall threshold 32 GB. OIT’s central file storage rate applied multiplied account anticipated duration storage. See . Data storage costs CIDA drive 1Charged University; CIDA2Prices based HDC website.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"onedrive-for-business","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"OneDrive for Business","title":"CIDA-data-storage-guidelines","text":"OneDrive Business hybrid local cloud storage system allows 5TB cloud storage. Individual file size limited 15 GB. Unlike CIDA drive, files directories saved OneDrive directory private default backed cloud. OneDrive Business HIPAA compliant. OIT SOM can access folders created directory, manager enters data access request gets approved HR. Files can downloaded local computer cloud -needed basis -site, ensures limited amount data stored locally. Files can also shared individuals @cuanschutz.edu email addresses via OneDrive Business. confuse personal OneDrive account! install OneDrive Business unencrypted personal computer. Files may sync (downloaded) local computer, leave potentially sensitive data vulnerable. Concurrent use OneDrive Business directories tracked Git can lead syncing issues OneDrive. can typically solved restarting OneDrive. Relevant project data stored OneDrive copied CIDA drive regularly, especially projects become inactive. Certain institutions groups may policies using OneDrive Business, please verify research group acceptable data live .","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"external-servers","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"External Servers","title":"CIDA-data-storage-guidelines","text":"Depending project data interest, data may housed external server. External servers exist various forms require varying workflows. Care taken data living external server remain external server. However, code, reports, files necessary project still copied CIDA drive regular intervals (exceptions may exist, e.g., processes specified CIDA’s memorandum understanding research group).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"eureka-by-health-data-compass-hdc","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"Eureka by Health Data Compass (HDC)","title":"CIDA-data-storage-guidelines","text":"patient level data Eureka moved Google Cloud explicit permission HDC specific project data. Raw data data PID copied location except approved HDC. Backups code, reports, files still copied CIDA drive accessible others CIDA case emergency. projects requiring Eureka, Eureka Cost Estimator can used determine expected costs particular project priori. costs charged project’s PI possible.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"github","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"GitHub","title":"CIDA-data-storage-guidelines","text":"general, GitHub used everything, except data. tracking small data sets Git pushing GitHub usually harmless, tracking data sets Git can snowball storage needed GitHub also slow git commands. Avoid tracking especially large binary data files (e.g. files db, xls, xlsx, extensions). Instead, convert files text file (e.g. tab-delimited txt file, csv file). speed git processes help conserve storage space [see link information]. Instead tracking data, one can build “data-check” code project ensure MD5 sums expected. Please consult “coding guidelines” document information best practices tracking work Git GitHub. repositories GitHub updated frequently, especially prior leaving vacation extended time office.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"really-really-big-data","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"Really, really big data","title":"CIDA-data-storage-guidelines","text":"data particular project particularly large, may require wish data storage solution tailored particular project (funded entirely project). non-Eureka solutions, please contact SOM . Consider using CIDA’s HPC option (see ).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"cida-bios-high-performance-computing-server","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"CIDA-BIOS High Performance Computing Server","title":"CIDA-data-storage-guidelines","text":"HPC purchased CIDA funds U01 grant (Katerina Kechris Debashis Ghosh PIs). Therefore, primary priority given CIDA & research related U01 grant. Secondary priority given Ghosh & Kechris group members. [Tertiary access can attained requesting access Dr. Kechris via smartsheet.] server Dell PowerEdge R740XD, Intel Xeon Gold 6152 2.1G X (2) CPU, 44 cores, 1TB memory, 240 SSD X (2) mirrored disk operating system, ~50TB usable disk storage. operating system CentOS 7.x, common research software available R, R Studio, MatLab, Python, Java. Server HIPAA compliant therefore PHI can stored server. Backups available via Wasabi: https://wasabi.com/hot-cloud-storage/.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"unapproved-data-storage-options","dir":"Articles","previous_headings":"CIDA Data Storage Tools > Data Storage Locations Available to CIDA Members","what":"Unapproved data storage options","title":"CIDA-data-storage-guidelines","text":"options listed approved CIDA temporary data storage, CIDA drive approved ongoing data storage. Please follow best practices ask questions . Dropbox Google Drive OneDrive (personal) Unencrypted hard drive flash drive","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/data_storage.html","id":"useful-links","dir":"Articles","previous_headings":"CIDA Data Storage Tools","what":"Useful Links","title":"CIDA-data-storage-guidelines","text":"Health Insurance Portability Accountability Act (HIPAA):http://www.hhs.gov/hipaa/-professionals/index.html Health Information Technology Economic Clinical Health (HITECH):http://www.hhs.gov/hipaa/-professionals/special-topics/HITECH-act-enforcement-interim-final-rule/index.html Guidance Regarding Methods De-identification Protected Health Information Accordance Health Insurance Portability Accountability Act (HIPAA) Privacy Rule:http://www.hhs.gov/hipaa/-professionals/privacy/special-topics/de-identification/index.html VPN Remote Desktop:https://www1.ucdenver.edu/offices/office--information-technology/software/---use/vpn--remote-access GitLab:http://cidagitlab.ucdenver.pvt/ OneDrive Business:https://www1.ucdenver.edu/offices/office--information-technology/software/---use/onedrive https://www1.ucdenver.edu/docs/default-source/offices-oit-documents/--documents/onedrive-staying-secure.pdf?sfvrsn=668bb7b8_4 Eureka:https://www.healthdatacompass.org/cloud-analytics-infrastructure/using-eureka https://www.healthdatacompass.org/cloud-analytics-infrastructure/eureka-cost-estimator","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"what-is-git","dir":"Articles","previous_headings":"Introduction","what":"What is Git?","title":"Tracking code in Git/GitHub","text":"According Git’s website, “Git free open source distributed version control system.” mean? Let’s break . First, Similarly R, Git available anyone computer access internet free charge. Anyone can install use , anyone can contribute project (technical know-). second half, version control system (VCS) tool enables teams small single person large multinational corporation track changes code time integrate changes made decentralized team developers. purposes, Git enables us create reproducible analysis code bases, full history analysis available choose share .","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"command-line-basics","dir":"Articles","previous_headings":"Introduction","what":"Command Line Basics","title":"Tracking code in Git/GitHub","text":"order use Git command line (Terminal Git Bash), certain level basic commands needed navigate files computer. list commands help navigate directories accomplish basic tasks using command line. ls - List subdirectories files current directory pwd - Print working directory cd MyFolder - Move folder MyFolder located current working directory cd Path//MyFolder - Move folder MyFolder located Path// inside current working directory cd .. - Move parent directory (.e. one folder back) cd / - Move root directory cd ~ - Move home directory mkdir - Make directory rm <filename> - Remove file","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"terminal-git-bash","dir":"Articles","previous_headings":"Introduction > Notes","what":"Terminal / Git Bash","title":"Tracking code in Git/GitHub","text":"instructions follow attempt applicable MacOS Windows platforms. However, key differences exist two operating systems. situations created separate instructions Windows MacOS. However, sections MacOS Windows functionally , single section provided. sections, language used may reference Terminal, cases substitute Git Bash using Windows operating system.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"main-vs-master","dir":"Articles","previous_headings":"Introduction > Notes","what":"Main vs Master","title":"Tracking code in Git/GitHub","text":"Historically, default branch new Git repository named master. However, 2020 push remove unnecessary references slavery led GitHub companies change default branch name main. instructions follow assume default branch name main show setup local Git configuration default main. However, due relative recency change, may encounter repositories master primary branch. situations, instructions follow still applicable, need substitute main master.","code":""},{"path":[]},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"macos","dir":"Articles","previous_headings":"Getting Started > Installing Git","what":"MacOS","title":"Tracking code in Git/GitHub","text":"Open Terminal run command git --version. don’t Git installed already, prompted install. Follow instructions provided Terminal pop-window install Git.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"windows","dir":"Articles","previous_headings":"Getting Started > Installing Git","what":"Windows","title":"Tracking code in Git/GitHub","text":"Git Git Bash come included part Git Windows package. Download install Git Windows like Windows applications. downloaded find included .exe file open execute Git Bash.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"creating-github-account","dir":"Articles","previous_headings":"Getting Started","what":"Creating GitHub Account","title":"Tracking code in Git/GitHub","text":"Go https://github.com/ click Sign upper right hand corner. Follow instructions create account, choosing account name easily identifiable belonging (.e. “firstname-lastname” something similar). NOTE: already personal GitHub account, may continue use work CIDA account name easily identifiable belonging (.e. account name like “firstname-lastname” something similar).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"configure-git","dir":"Articles","previous_headings":"Getting Started","what":"Configure Git","title":"Tracking code in Git/GitHub","text":"associate local Git configuration name Email, run commands Terminal Git Bash. , your_email@cuanschutz.edu substituted email associated GitHub account. using preexisting personal GitHub account, may may end cuanschutz.edu. Additionally, local Git configured make main default branch name. , run following command Terminal/GitBash:","code":"git config --global user.name \"Firstname Lastname\" git config --global user.email \"your_email@cuanschutz.edu\" git config --global -add init.defaultBranch main"},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"requesting-cida-github-access","dir":"Articles","previous_headings":"Getting Started","what":"Requesting CIDA GitHub Access","title":"Tracking code in Git/GitHub","text":"Following account creation, send email containing GitHub username ryan <dot> peterson <> cuanschutz <dot> edu max <dot> mcgrath <> cuanschutz <dot> edu request access CIDA’s GitHub organization (please send email cuanschutz.edu email address).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"setting-up-ssh","dir":"Articles","previous_headings":"Getting Started","what":"Setting Up SSH","title":"Tracking code in Git/GitHub","text":"instructions --date 10/05/22. Newer instructions along additional troubleshooting may available GitHub","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"macos-1","dir":"Articles","previous_headings":"Getting Started > Setting Up SSH","what":"MacOS","title":"Tracking code in Git/GitHub","text":"Open Terminal id_rsa.pub id_ecdsa.pub id_ed25519 see files present, proceed Step 3. Otherwise continue Step 2. Open Terminal Enter ssh-keygen -t ed25519 -C \"your_email@example.com\" substituting email address associated GitHub account ’re prompted “Enter file save key,” press Enter. accepts default file location. prompt, type secure passphrase Start ssh-agent background running eval \"$(ssh-agent -s)\" Open configuration file open ~/.ssh/config file doesn’t exist create touch ~/.ssh/config use command open Edit ~/.ssh/config contain following lines: Add SSH private key ssh-agent store password keychain running ssh-add --apple-use-keychain ~/.ssh/id_ed25519 Copy SSH public key clipboard pbcopy < ~/.ssh/id_ed25519.pub Open GitHub web browser, log Go upper right hand corner, click profile photo, select Settings Select SSH GPG keys menu left Click green New SSH key button Enter title SSH key Title field (use descriptive title like “CIDA MacBook Pro”) Select Key type “Authentication Key” Paste key Key field Click Add SSH key Test access GitHub SSH ssh -T git@github.com see following message, verify fingerprint see matches GitHub’s public key fingerprint (link). , type Yes Verify resulting message contains username. receive “permission denied” message, see Error: Permission denied (publickey)","code":"Host *   AddKeysToAgent yes   UseKeychain yes   IdentityFile ~/.ssh/id_ed25519 ``` bash > The authenticity of host 'github.com (IP ADDRESS)' cant be established. > RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8. > Are you sure you want to continue connecting (yes/no)? ```"},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"windows-1","dir":"Articles","previous_headings":"Getting Started > Setting Up SSH","what":"Windows","title":"Tracking code in Git/GitHub","text":"Git Bash, type ssh-keygen Press enter save SSH key default location Enter password password protect SSH key leave blank hit Enter proceed without password recieve message saying public key saved c/Users/username/.ssh/id_rsa.pub, type cat c/Users/username/.ssh/id_rsa.pub output key Copy paste key Open GitHub web browser, log Go upper right hand corner, click profile photo, select Settings Select SSH GPG keys menu left Click green New SSH key button Enter title SSH key Title field (use descriptive title like “CIDA MacBook Pro”) Select Key type “Authentication Key” Paste key Key field Click Add SSH key","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"setting-up-sso","dir":"Articles","previous_headings":"Getting Started","what":"Setting up SSO","title":"Tracking code in Git/GitHub","text":"Copy/distill instructions : https://docs.github.com/en/enterprise-cloud@latest/authentication/authenticating--saml-single-sign-/-authentication--saml-single-sign-granted access CIDA-CSPH GitHub organization setting SSH, go https://github.com, log upper-right corner page, click profile photo, click Settings Select SSH GPG keys menu left right SSH key ’d like authorize, click Configure SSO. don’t see Configure SSO, ensure authenticated least CIDA-CSPH organization visiting https://github.com/orgs/CIDA-CSPH/, accessing non-public repository, signing CU login see CIDA-CSPH listed. Click Authorize right.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"creating-new-project","dir":"Articles","previous_headings":"Getting Started","what":"Creating New Project","title":"Tracking code in Git/GitHub","text":"Create project folder local computer calling CIDAtools::create_project() R Initialize git repository navigating folder (cd Path//Folder) using command git init Stage file changes git add . Create initial commit git commit -m \"Initial commit\" web browser, navigate https://github.com/orgs/CIDA-CSPH/repositories Sign using CU login Click green New repository button Enter name repository add template, README, .gitignore, license file Click Create repository Add remote local repository git remote add origin git@github.com:CIDA-CSPH/<-repository>.git (SSH link can copied empty GitHub remote repository ’ve just created). Push work GitHub git push origin main","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"cloning-existing-project","dir":"Articles","previous_headings":"Getting Started","what":"Cloning Existing Project","title":"Tracking code in Git/GitHub","text":"Navigate GitHub remote repository Click green “Code ∨” button Click “SSH” copy link Clone repository git clone git@github.com:CIDA-CSPH/<-repository>.git","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"regular-workflow","dir":"Articles","previous_headings":"","what":"Regular Workflow","title":"Tracking code in Git/GitHub","text":"Add commit changes Fetch merge changes (see Handling Merge Conflicts ) Push new commits","code":"cd Path/To/Directory git add . git commit -m \"My commit message\" git fetch origin main git merge origin/main ## Fix any merge conflicts git commit -m \"Brief description of changes (<=50 characters)\" git push origin main"},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"handling-merge-conflicts","dir":"Articles","previous_headings":"Regular Workflow","what":"Handling Merge conflicts","title":"Tracking code in Git/GitHub","text":"case another user modified committed changes file modified one recent commits, run git pull may notified merge conflict need resolve conflicts can push changes GitHub. : running git merge origin/main notified merge conflicts, run git status see files conflicts (listed modified: front ) Note: newer version Git may receive error saying “divergent branches need specify reconcile ” case, can add indicator pull without rebasing git merge ---rebase origin/main Open files text editor (RStudio, Vim, textEdit, Notepad++, etc.) , see sections code : , section code <<<<<<< HEAD ======= local version code, code ======= >>>>>>> commit_hash version code pulled remote (.e., GitHub) fix merge conflict, simply select version code want keep delete version along <<<<<<< HEAD ======= >>>>>>> commit_hash. Note may also need mix match two sections code, always delete conflict markers. Save changes Return Terminal/Git Bash add commit changes","code":"<<<<<<< HEAD # Version 1 of Code ======= # Version 2 of Code >>>>>>> commit_hash git add . git commit"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"faq","dir":"Articles","previous_headings":"","what":"FAQ","title":"Tracking code in Git/GitHub","text":"use GitHub? GitLab? Didn’t just switch GitHub? Either currently viable options. currently transitioning GitLab GitHub, picking first time, suggest using GitHub (call “GH” simplicity).  main analysis code “live”? ’m committing pushing GitHub/Lab just making backups work “home” P: drive? code “live” cloud GitHub/GitLab, every time want work , pull ? code live GH. Repos GH can cloned wherever want; locally, P drive, etc. need run code, machine can read local network location. ’s best practice pull GH need run anything project case someone’s changed (nothing changed say “repo date”).  even version code P: drive ? ’s  , pull GitHub/Lab, replacing code P: drive? Yes, something’s changed GitHub server. can also easily “checkout” earlier versions repository previous points time, older code never lost.  One advantage people talk lot using Git can “merge” files multiple people. actually work?. ’s prevent person pulling syntax making edits, person B pulling syntax making edits, people pushing Git server? Wouldn’t 2 versions file, neither fully correct? upgrade Git? Git force person pushes second fix merge issues code pushing back GitHub case. also tools available branching issue comes often particular project.  don’t really use much version control now anyways, ad-hoc otherwise. bad? just exposed projects change enough merit ? CIDA requires code tracked Git GitHub. future self thank .  Often code include additional “justification” code ’s commented . example, merge two datasets ID, also check dimensions new merged dataset make sure expected. , write function, also hard-code version function make sure function actually ’s supposed . examples bit trivial, think illustrate well sort “double-checking” sometimes include code . sort thing think valuable include code comment? bother people, taken syntax double-check completed? think referring “unit testing”, fact good practice. put new functions create separate helper-functions.R file can scripted Rmd, can also (self-contained) unit tests well.  Isn’t CIDA element GH platform need use, “secure” something? supposed use personal GH accounts work? CIDA GitHub “organization” part CU GitHub Enterprise account. Membership organization can merged personal GitHub account new GitHub account. university- (CIDA-) related repos live umbrella. main page https://github.com/CIDA-CSPH; need account invitation; please contact member Research Tools committee invitation.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/git.html","id":"git-kraken-legacy","dir":"Articles","previous_headings":"","what":"Git Kraken (Legacy)","title":"Tracking code in Git/GitHub","text":"section walk set GitKraken interface CIDA GitHub, allowing easily push/pull projects working directory GitHub. First, download GitKraken https://www.gitkraken.com/download. installed, sign GitHub account associated CIDA GitHub. take SSO associated CIDA GitHub, authorize sign onto.  logged GitKraken GitHub account, need connect GitHub. default GitKraken screen panel called “Integrations”: click GitHub. , two possibilities: click “Connect GitHub” may take SSO can log way (slightly repetitive). , prompted use OAuth Personal Access token, can following: go “Settings” tab GitHub, click “Developer Settings”, click “Personal access tokens” generate token 90 days, making sure select “repo” (along scopes needed).  Ideally, able automatically connect GitHub without generating personal access token, GitKraken moderately cursed. successfully connected GitHub, need generate SSH key add GitHub. , simply click “Generate SSH key add GitHub” button (optionally adding title SSH key wish). step successful, receive notification within GitKraken lower left, screen now display SSH key within GitKraken Settings -> SSH GPG keys tab GitHub:  Congratulations, successfully linked CIDA GitHub! , can open, clone, initiate repositories CIDA Github using , guessed , Open repo, Clone repo, Start local repo options home screen:  going clone repo, just make sure GitHub.com section, select CIDA repository clone, well like clone (H: P: drives, elsewhere).  First, however, need generate another SSH key GitKraken add GitHub (least way can figure). Go Preferences -> SSH generate new Private/Public Key, copy SSH Public Key already one:  return GitHub account, click SSH GPG keys settings, click Add new key, copy SSH key Key box. need Authorize SSO. , able clone, open, initialize repos!  cloned repo, can open push/pull changes. done pretty simply via push pull commands top opening repo.  details manage pull, push, branching, features, visit https://help.gitkraken.com/gitkraken-client/github-gitkraken-client/","code":""},{"path":"https://cida-csph.github.io/CIDAtools/articles/sas-macros.html","id":"list-of-sas-macros","dir":"Articles","previous_headings":"","what":"List of SAS macros","title":"CIDA SAS Macros","text":"SAS macros CIDAtools can searched , source code available .","code":""},{"path":"https://cida-csph.github.io/CIDAtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"CIDA Research Tools Committee. Author, maintainer.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"CIDA Research Tools Committee (2024). CIDAtools: package contains tools CIDA projects. R package version 0.1.2, https://cida-csph.github.io/CIDAtools/.","code":"@Manual{,   title = {CIDAtools: This package contains tools for CIDA projects},   author = {{CIDA Research Tools Committee}},   year = {2024},   note = {R package version 0.1.2},   url = {https://cida-csph.github.io/CIDAtools/}, }"},{"path":"https://cida-csph.github.io/CIDAtools/reference/CIDA_drive_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get CIDA drive path — CIDA_drive_path","title":"Get CIDA drive path — CIDA_drive_path","text":"function attempts get proper path CIDA drive either Windows Mac.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/CIDA_drive_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get CIDA drive path — CIDA_drive_path","text":"","code":"CIDA_drive_path(file = \"\")"},{"path":"https://cida-csph.github.io/CIDAtools/reference/CIDA_drive_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get CIDA drive path — CIDA_drive_path","text":"file (optional) Path subdirectory/file within CIDA drive","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/CIDA_drive_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get CIDA drive path — CIDA_drive_path","text":"Full (absolute) file path CIDA drive","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/CIDA_drive_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get CIDA drive path — CIDA_drive_path","text":"","code":"# Read data from P1234PIname project if (FALSE) { # \\dontrun{ df <- read.csv(CIDA_drive_path(\"BRANCHES/Pulmonary/P1234PIname/DataRaw/data.csv\")) } # }"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectAnalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Project Analyst — ProjectAnalyst","title":"Get Project Analyst — ProjectAnalyst","text":"function returns Project Analyst Name. none exists, return value CIDAtools.analyst option blank option set.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectAnalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Project Analyst — ProjectAnalyst","text":"","code":"ProjectAnalyst()"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectAnalyst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Project Analyst — ProjectAnalyst","text":"character string analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectLocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Project data location on CIDA Drive — ProjectLocation","title":"Get Project data location on CIDA Drive — ProjectLocation","text":"Get Project data location CIDA Drive","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectLocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Project data location on CIDA Drive — ProjectLocation","text":"","code":"ProjectLocation(path = \"\")"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectLocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Project data location on CIDA Drive — ProjectLocation","text":"path (optional) relative path particular place project","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectLocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Project data location on CIDA Drive — ProjectLocation","text":"full (absolute) file path including project location CIDA drive","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectLocation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Project data location on CIDA Drive — ProjectLocation","text":"","code":"# Read data from current project if (FALSE) { # \\dontrun{ df <- read.csv(ProjectLocation(\"DataRaw/my_proj_data.csv\")) } # }"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectName.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Project Name — ProjectName","title":"Get Project Name — ProjectName","text":"function returns Project Name blank none exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Project Name — ProjectName","text":"","code":"ProjectName()"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Project Name — ProjectName","text":"character string project name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PI Name — ProjectPI","title":"Get PI Name — ProjectPI","text":"function returns PI Name blank none exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PI Name — ProjectPI","text":"","code":"ProjectPI()"},{"path":"https://cida-csph.github.io/CIDAtools/reference/ProjectPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PI Name — ProjectPI","text":"character string PI name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/Round.html","id":null,"dir":"Reference","previous_headings":"","what":"Round and don't drop trailing zeros — Round","title":"Round and don't drop trailing zeros — Round","text":"Shorter wrapper format(x, digits = n, nsmall = n)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/Round.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round and don't drop trailing zeros — Round","text":"","code":"Round(x, n)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/Round.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round and don't drop trailing zeros — Round","text":"x numeric formatted n number digits nsmall","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/Round.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round and don't drop trailing zeros — Round","text":"character vector length x converted","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/Round.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round and don't drop trailing zeros — Round","text":"used unless digits decimal needed. Note numbers leading zeros (ie. 0.0349) get one decimal place n. (ie. Round(O.0349, 2) return 0.035)","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectAnalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Project Analyst — SetProjectAnalyst","title":"Set Project Analyst — SetProjectAnalyst","text":"function allows set  project analyst. overwrite current value exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectAnalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Project Analyst — SetProjectAnalyst","text":"","code":"SetProjectAnalyst(AnalystName)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectAnalyst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Project Analyst — SetProjectAnalyst","text":"AnalystName string containing analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectAnalyst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Project Analyst — SetProjectAnalyst","text":"message stating name changed.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectData.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data for project — SetProjectData","title":"Set data for project — SetProjectData","text":"Allows set misc project data parameters Project Name, Analyst, PI recommend use specific function","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data for project — SetProjectData","text":"","code":"SetProjectData(Parameter, Value)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data for project — SetProjectData","text":"Parameter Project Parameter set Value Value set project parameter","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectLocation.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Project Location — SetProjectLocation","title":"Set Project Location — SetProjectLocation","text":"function allows set Project's location CIDA drive. overwrite current value exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectLocation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Project Location — SetProjectLocation","text":"","code":"SetProjectLocation(path)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectLocation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Project Location — SetProjectLocation","text":"path string containing file path project location CIDA drive","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectLocation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Project Location — SetProjectLocation","text":"message stating name changed.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectName.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Project Name — SetProjectName","title":"Set Project Name — SetProjectName","text":"function allows set  project name. overwrite current value exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Project Name — SetProjectName","text":"","code":"SetProjectName(ProjectName)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Project Name — SetProjectName","text":"ProjectName string containing analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Project Name — SetProjectName","text":"message stating name changed.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Set PI Name — SetProjectPI","title":"Set PI Name — SetProjectPI","text":"function allows set Project's PI. overwrite current value exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set PI Name — SetProjectPI","text":"","code":"SetProjectPI(PI)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set PI Name — SetProjectPI","text":"PI string containing analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/SetProjectPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set PI Name — SetProjectPI","text":"message stating name changed.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/backup_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup Project Directory — backup_project","title":"Backup Project Directory — backup_project","text":"function backs CIDA project shared (P) CIDA drive. backup directory can either existing (changed files/folders updated), nonexisting, case full project backup created.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/backup_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup Project Directory — backup_project","text":"","code":"backup_project(   path_from = getwd(),   path_to = NULL,   exclude = c(\".DS_Store\", \".Rproj.user\", \".git\"),   recreate = FALSE,   data_only = TRUE,   readme = TRUE )"},{"path":"https://cida-csph.github.io/CIDAtools/reference/backup_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backup Project Directory — backup_project","text":"path_from Path folders copied (project directory location). path_to Path folders copied (P drive, used specified). exclude files/folders backed P-drive (useful larger files change often). Currently used. recreate backup created ground ? (can take longer, useful projects many changes) data_only subdirs including \"data\" (DataRaw/ DataProcessed/) backed ? readme forces backup project readme","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/backup_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Backup Project Directory — backup_project","text":"function verbose output ensure back working,  ultimately returns success indicator returned file.copy.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_table1.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a table one — cida_table1","title":"Create a table one — cida_table1","text":"function created provide characteristics study group option stratify variable (usually exposure).","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_table1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a table one — cida_table1","text":"","code":"cida_table1(   data,   includeVars,   stratifyBy,   group_labels,   group_label_span,   caption = NULL,   footnote = NULL,   include_total = TRUE,   exclude_mean = FALSE,   exclude_missing = FALSE,   compute_pval = FALSE,   nonParametricVars = NULL,   exportWord = FALSE,   useSciNotation = FALSE )"},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_table1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a table one — cida_table1","text":"data data frame data includeVars vector variable names wish include table. stratifyBy group wish stratify table group_labels Higher level labels stratified groups group_label_span span columns group `group_labels` caption Optional; Adds caption table footnote Optional; Adds footnote table include_total Bool; Default TRUE. Includes column summation stratified groups. exclude_mean Bool; Default FALSE. Excludes mean numerical variables. exclude_missing Bool; Default FALSE. Excludes percentages missing data returns counts compute_pval Bool; Default FALSE. Computes p-values `includeVars` add p-value column table. nonParametricVars Vector; variable names like non-parametric testing conducted p-values returned exportWord Bool; whether export table nice format word useSciNotation Bool; Use scientific notation large/small continuous variables","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_table1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a table one — cida_table1","text":"html table N percentages categorical variables, mean , SD, Median, Range numeric variables. Returns p-values specified.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_table1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a table one — cida_table1","text":"","code":"# Synthetic data df = data.frame(     `Age` = c(10,12,14,18,20,19,28,33, rep(NA, 4)),     `Sex` = c(rep(\"Female\", 4), rep(\"Male\", 4), rep(NA, 4)),     `Smoking Status` = c(rep('Former', 2), rep('Current', 2), rep('Never', 4), rep(NA, 4)),     `IL-8` = rnorm(12, 35, sd = 7),     `Group` = c(rep('Control', 4), rep('Heart Disease', 4), rep('Lung Disease', 4)),      check.names = FALSE     ) # Table 1 with no p-values cida_table1(data = df,             includeVars = c(\"Age\", \"Sex\", \"Smoking Status\", \"IL-8\"),             stratifyBy = \"Group\",             group_labels = c(\"Group\"),             group_label_span = c(3),             caption = \"TABLE 1\",             footnote = \"My table 1\",             include_total = FALSE,             compute_pval = FALSE,             nonParametricVars = NULL,             exportWord = FALSE) #> <table class=\"Rtable1-zebra Rtable1-shade\"><caption>TABLE 1<\/caption> #>  #> <thead> #> <tr> #> <th class=\"grouplabel\"><\/th> #> <th colspan=\"3\" class=\"grouplabel\"><div>Group<\/div><\/th> #> <\/tr> #> <tr> #> <th class='rowlabel firstrow lastrow'><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Control<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Heart Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Lung Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <\/tr> #> <tfoot><tr><td colspan=\"4\" class=\"Rtable1-footnote\"><p>My table 1<\/p> #> <\/td><\/tr><\/tfoot> #> <\/thead> #> <tbody> #> <tr> #> <td class='rowlabel firstrow'>Age<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Mean (SD)<\/td> #> <td>13.5 (3.42)<\/td> #> <td>25.0 (6.68)<\/td> #> <td>NA (NA)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Median [Min, Max]<\/td> #> <td>13.0 [10.0, 18.0]<\/td> #> <td>24.0 [19.0, 33.0]<\/td> #> <td>NA [NA, NA]<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Missing<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Sex<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Female<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Male<\/td> #> <td>0 (0%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Missing<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Smoking Status<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Current<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Former<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Never<\/td> #> <td>0 (0%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Missing<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>IL-8<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Mean (SD)<\/td> #> <td>28.7 (8.81)<\/td> #> <td>34.5 (9.09)<\/td> #> <td>34.2 (3.59)<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>30.1 [17.9, 36.8]<\/td> #> <td class='lastrow'>36.3 [22.2, 43.0]<\/td> #> <td class='lastrow'>33.2 [31.1, 39.4]<\/td> #> <\/tr> #> <\/tbody> #> <\/table>  # Table 1 with p-values, no mean, no percent missing cida_table1(data = df,             includeVars = c(\"Age\", \"Sex\", \"Smoking Status\", \"IL-8\"),             stratifyBy = \"Group\",             group_labels = c(\"\", \"Group\", \"\"),             group_label_span = c(1, 3, 1),             caption = \"TABLE 1\",             footnote = \"My table 1\",             exclude_mean = TRUE,             exclude_missing = TRUE,             include_total = TRUE,             compute_pval = TRUE,             nonParametricVars = NULL,             exportWord = FALSE) #> <table class=\"Rtable1-zebra Rtable1-shade\"><caption>TABLE 1<\/caption> #>  #> <thead> #> <tr> #> <th class=\"grouplabel\"><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <th colspan=\"3\" class=\"grouplabel\"><div>Group<\/div><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <\/tr> #> <tr> #> <th class='rowlabel firstrow lastrow'><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Total<br><span class='stratn'>(N=12)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Control<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Heart Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Lung Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'><i>p<\/i>-value<\/span><\/th> #> <\/tr> #> <tfoot><tr><td colspan=\"6\" class=\"Rtable1-footnote\"><p>My table 1<\/p> #>  #> <p> #>         <p style=font-size:12px;><b><i>p<\/i>-values computed as follows:<\/b><\/p><\/p> #>  #> <p>&ensp; Parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- t-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- ANOVA<\/p> #>  #> <p>&ensp; Non-parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- Wilcoxon-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- Kruskal-Wallis test<\/p> #>  #> <p>&ensp; Categorical data with any cell  value < 5 -- Fishers exact test<\/p> #>  #> <p>&ensp; Categerical data with all cell values >= 5 -- Chi-square test of independence<\/p> #> <\/td><\/tr><\/tfoot> #> <\/thead> #> <tbody> #> <tr> #> <td class='rowlabel firstrow'>Age<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>18.5 [10.0, 33.0]<\/td> #> <td class='lastrow'>13.0 [10.0, 18.0]<\/td> #> <td class='lastrow'>24.0 [19.0, 33.0]<\/td> #> <td class='lastrow'>NA [NA, NA]<\/td> #> <td class='lastrow'>0.022<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Sex<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Female<\/td> #> <td>4 (33.3%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Male<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Smoking Status<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Current<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Former<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Never<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>IL-8<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>33.3 [17.9, 43.0]<\/td> #> <td class='lastrow'>30.1 [17.9, 36.8]<\/td> #> <td class='lastrow'>36.3 [22.2, 43.0]<\/td> #> <td class='lastrow'>33.2 [31.1, 39.4]<\/td> #> <td class='lastrow'>0.508<\/td> #> <\/tr> #> <\/tbody> #> <\/table>  # Table 1 styling the output # You can also rename the variables like this (name in data = new name) cida_table1(data = df,             includeVars = c(\"Age\" = \"age\",              \"Sex\" = \"sex\",               \"Smoking Status\" = \"smoking\",                \"IL-8\"= \"Interleukin 8\"),             stratifyBy = \"Group\",             group_labels = c(\"\", \"Group\", \"\"),             group_label_span = c(1, 3, 1),             caption = \"TABLE 1\",             footnote = \"My table 1\",             exclude_mean = TRUE,             exclude_missing = TRUE,             include_total = TRUE,             compute_pval = TRUE,             nonParametricVars = c(\"Age\", \"IL-8\"), # Uses original name             exportWord = FALSE) #> <table class=\"Rtable1-zebra Rtable1-shade\"><caption>TABLE 1<\/caption> #>  #> <thead> #> <tr> #> <th class=\"grouplabel\"><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <th colspan=\"3\" class=\"grouplabel\"><div>Group<\/div><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <\/tr> #> <tr> #> <th class='rowlabel firstrow lastrow'><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Total<br><span class='stratn'>(N=12)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Control<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Heart Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Lung Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'><i>p<\/i>-value<\/span><\/th> #> <\/tr> #> <tfoot><tr><td colspan=\"6\" class=\"Rtable1-footnote\"><p>My table 1<\/p> #>  #> <p> #>         <p style=font-size:12px;><b><i>p<\/i>-values computed as follows:<\/b><\/p><\/p> #>  #> <p>&ensp; Parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- t-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- ANOVA<\/p> #>  #> <p>&ensp; Non-parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- Wilcoxon-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- Kruskal-Wallis test<\/p> #>  #> <p>&ensp; Categorical data with any cell  value < 5 -- Fishers exact test<\/p> #>  #> <p>&ensp; Categerical data with all cell values >= 5 -- Chi-square test of independence<\/p> #> <\/td><\/tr><\/tfoot> #> <\/thead> #> <tbody> #> <tr> #> <td class='rowlabel firstrow'>age<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>18.5 [10.0, 33.0]<\/td> #> <td class='lastrow'>13.0 [10.0, 18.0]<\/td> #> <td class='lastrow'>24.0 [19.0, 33.0]<\/td> #> <td class='lastrow'>NA [NA, NA]<\/td> #> <td class='lastrow'>0.021<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>sex<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Female<\/td> #> <td>4 (33.3%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Male<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>smoking<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Current<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Former<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Never<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Interleukin 8<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>33.3 [17.9, 43.0]<\/td> #> <td class='lastrow'>30.1 [17.9, 36.8]<\/td> #> <td class='lastrow'>36.3 [22.2, 43.0]<\/td> #> <td class='lastrow'>33.2 [31.1, 39.4]<\/td> #> <td class='lastrow'>0.668<\/td> #> <\/tr> #> <\/tbody> #> <\/table>  # Tables are html so you can customize them using html and css cida_table1(data = df,             includeVars = c(\"Age\" = \"age\",                             \"Sex\" =                             \"<span style =                             'background-color:pink;'>sex<\/span>\", # Highlight pink                             \"Smoking Status\" =                             \"<span style='color:purple;                              font-family:Snell Roundhand;                              font-size:1.5em;                              font-weight:900;'>smoking status<\/span>\",                             \"IL-8\"=                             \"Interleukin 8&beta;\"), # &beta; is html for greek lowercase beta             stratifyBy = \"Group\",             group_labels = c(\"\", \"Group\", \"\"),             group_label_span = c(1, 3, 1),             caption = \"TABLE 1\",             footnote = \"My table 1\",             exclude_mean = TRUE,             exclude_missing = TRUE,             include_total = TRUE,             compute_pval = TRUE,             nonParametricVars = NULL,             exportWord = FALSE) #> <table class=\"Rtable1-zebra Rtable1-shade\"><caption>TABLE 1<\/caption> #>  #> <thead> #> <tr> #> <th class=\"grouplabel\"><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <th colspan=\"3\" class=\"grouplabel\"><div>Group<\/div><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <\/tr> #> <tr> #> <th class='rowlabel firstrow lastrow'><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Total<br><span class='stratn'>(N=12)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Control<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Heart Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Lung Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'><i>p<\/i>-value<\/span><\/th> #> <\/tr> #> <tfoot><tr><td colspan=\"6\" class=\"Rtable1-footnote\"><p>My table 1<\/p> #>  #> <p> #>         <p style=font-size:12px;><b><i>p<\/i>-values computed as follows:<\/b><\/p><\/p> #>  #> <p>&ensp; Parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- t-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- ANOVA<\/p> #>  #> <p>&ensp; Non-parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- Wilcoxon-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- Kruskal-Wallis test<\/p> #>  #> <p>&ensp; Categorical data with any cell  value < 5 -- Fishers exact test<\/p> #>  #> <p>&ensp; Categerical data with all cell values >= 5 -- Chi-square test of independence<\/p> #> <\/td><\/tr><\/tfoot> #> <\/thead> #> <tbody> #> <tr> #> <td class='rowlabel firstrow'>age<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>18.5 [10.0, 33.0]<\/td> #> <td class='lastrow'>13.0 [10.0, 18.0]<\/td> #> <td class='lastrow'>24.0 [19.0, 33.0]<\/td> #> <td class='lastrow'>NA [NA, NA]<\/td> #> <td class='lastrow'>0.022<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'><span style = #>                             'background-color:pink;'>sex<\/span><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Female<\/td> #> <td>4 (33.3%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Male<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'><span style='color:purple; #>                              font-family:Snell Roundhand; #>                              font-size:1.5em; #>                              font-weight:900;'>smoking status<\/span><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Current<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Former<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Never<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Interleukin 8&beta;<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>33.3 [17.9, 43.0]<\/td> #> <td class='lastrow'>30.1 [17.9, 36.8]<\/td> #> <td class='lastrow'>36.3 [22.2, 43.0]<\/td> #> <td class='lastrow'>33.2 [31.1, 39.4]<\/td> #> <td class='lastrow'>0.508<\/td> #> <\/tr> #> <\/tbody> #> <\/table>  # You can add icons if you like  cida_table1(data = df,             includeVars = c(\"Age\" = \"age\", \"Sex\" = \"sex\",             \"Smoking Status\" =             \"<link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'>             <span>Smoking Status <\/span>             <i class='fa fa-medkit'><\/i>\", # Medkit icon             \"IL-8\"= \"Interleukin 8&beta;\"),             stratifyBy = \"Group\",             group_labels = c(\"\", \"Group\", \"\"),             group_label_span = c(1, 3, 1),             caption = \"TABLE 1\",             footnote = \"My table 1\",             exclude_mean = TRUE,             exclude_missing = TRUE,             include_total = TRUE,             compute_pval = TRUE,             nonParametricVars = NULL,             exportWord = FALSE) #> <table class=\"Rtable1-zebra Rtable1-shade\"><caption>TABLE 1<\/caption> #>  #> <thead> #> <tr> #> <th class=\"grouplabel\"><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <th colspan=\"3\" class=\"grouplabel\"><div>Group<\/div><\/th> #> <th colspan=\"1\" class=\"grouplabel\"><\/th> #> <\/tr> #> <tr> #> <th class='rowlabel firstrow lastrow'><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Total<br><span class='stratn'>(N=12)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Control<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Heart Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'>Lung Disease<br><span class='stratn'>(N=4)<\/span><\/span><\/th> #> <th class='firstrow lastrow'><span class='stratlabel'><i>p<\/i>-value<\/span><\/th> #> <\/tr> #> <tfoot><tr><td colspan=\"6\" class=\"Rtable1-footnote\"><p>My table 1<\/p> #>  #> <p> #>         <p style=font-size:12px;><b><i>p<\/i>-values computed as follows:<\/b><\/p><\/p> #>  #> <p>&ensp; Parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- t-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- ANOVA<\/p> #>  #> <p>&ensp; Non-parametric<\/p> #>  #> <p>&ensp; &ensp; Numeric data with 2 groups -- Wilcoxon-test<\/p> #>  #> <p>&ensp; &ensp; Numeric data with more than 2 groups -- Kruskal-Wallis test<\/p> #>  #> <p>&ensp; Categorical data with any cell  value < 5 -- Fishers exact test<\/p> #>  #> <p>&ensp; Categerical data with all cell values >= 5 -- Chi-square test of independence<\/p> #> <\/td><\/tr><\/tfoot> #> <\/thead> #> <tbody> #> <tr> #> <td class='rowlabel firstrow'>age<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>18.5 [10.0, 33.0]<\/td> #> <td class='lastrow'>13.0 [10.0, 18.0]<\/td> #> <td class='lastrow'>24.0 [19.0, 33.0]<\/td> #> <td class='lastrow'>NA [NA, NA]<\/td> #> <td class='lastrow'>0.022<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>sex<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Female<\/td> #> <td>4 (33.3%)<\/td> #> <td>4 (100%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Male<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'><link rel='stylesheet' #> href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'> #>             <span>Smoking Status <\/span> #>             <i class='fa fa-medkit'><\/i><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Current<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0.029<\/td> #> <\/tr> #> <tr> #> <td class='rowlabel'>Former<\/td> #> <td>2 (16.7%)<\/td> #> <td>2 (50.0%)<\/td> #> <td>0 (0%)<\/td> #> <td>0 (0%)<\/td> #> <td><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Never<\/td> #> <td class='lastrow'>4 (33.3%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'>4 (100%)<\/td> #> <td class='lastrow'>0 (0%)<\/td> #> <td class='lastrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel firstrow'>Interleukin 8&beta;<\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <td class='firstrow'><\/td> #> <\/tr> #> <tr> #> <td class='rowlabel lastrow'>Median [Min, Max]<\/td> #> <td class='lastrow'>33.3 [17.9, 43.0]<\/td> #> <td class='lastrow'>30.1 [17.9, 36.8]<\/td> #> <td class='lastrow'>36.3 [22.2, 43.0]<\/td> #> <td class='lastrow'>33.2 [31.1, 39.4]<\/td> #> <td class='lastrow'>0.508<\/td> #> <\/tr> #> <\/tbody> #> <\/table>"},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_word_document.html","id":null,"dir":"Reference","previous_headings":"","what":"A wrapper fn for CIDA word doc output — cida_word_document","title":"A wrapper fn for CIDA word doc output — cida_word_document","text":"wrapper rmarkdown::word_document function.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_word_document.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A wrapper fn for CIDA word doc output — cida_word_document","text":"","code":"cida_word_document(...)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/cida_word_document.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A wrapper fn for CIDA word doc output — cida_word_document","text":"... passed rmarkdown::word_document","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/convertIntervalNotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Interval Notation — convertIntervalNotation","title":"Convert Interval Notation — convertIntervalNotation","text":"Converts vector Interval Notation less equal , less , etc.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/convertIntervalNotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Interval Notation — convertIntervalNotation","text":"","code":"convertIntervalNotation(x)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/convertIntervalNotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Interval Notation — convertIntervalNotation","text":"x character vector converted","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/convertIntervalNotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Interval Notation — convertIntervalNotation","text":"character vector length x converted","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Project Directory + readme files — create_project","title":"Create Project Directory + readme files — create_project","text":"function creates standard project organization structure CIDA within folder already exists.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Project Directory + readme files — create_project","text":"","code":"create_project(   path = getwd(),   template = c(\"Admin\", \"Background\", \"Code\", \"DataRaw\", \"DataProcessed\",     \"Dissemination\", \"Reports\"),   ProjectName = \"\",   PI = \"\",   analyst = \"\",   datalocation = \"\",   gitlocation = \"\" )"},{"path":"https://cida-csph.github.io/CIDAtools/reference/create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Project Directory + readme files — create_project","text":"path created? Default working directory. template subdirectories create ProjectName Name project, \"\" blank PI Name PI credentials, \"\" blank analyst Name Analyst(s), \"\" blank datalocation Location project CIDA Drive, \"\" blank gitlocation Location project GitHub","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/create_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Project Directory + readme files — create_project","text":"function creates desired project subdirectories readmes,  well standard .gitignore file files. overwrite file  however exist. return anything.","code":""},{"path":[]},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the nearest observation to another observation — find_nearest","title":"Find the nearest observation to another observation — find_nearest","text":"function finds nearest y every x. Y's may duplicated.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the nearest observation to another observation — find_nearest","text":"","code":"find_nearest(   x,   y,   direction = c(\"both\", \"ascending\", \"descending\"),   returnIndex = FALSE )  getlower(x, y, upper = FALSE)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the nearest observation to another observation — find_nearest","text":"x first value y second value direction default = , ascending y matches x descending y matches x. returnIndex index mathced y values returned instead matched list. upper upper value?","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the nearest observation to another observation — find_nearest","text":"list length 2 y matched every x, note direction = 'ascending' 'descending', NAs returned x values y values , respectively. index matched y values returnIndex = TRUE. indexes y x","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Find the nearest observation to another observation — find_nearest","text":"getlower(): function finding lower(upper) value","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/find_nearest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Find the nearest observation to another observation — find_nearest","text":"function borrowed heavily stack exchange post: https://stats.stackexchange.com/questions/161379/quickly-finding-nearest-time-observation","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/getProjectData.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data for project — getProjectData","title":"Get data for project — getProjectData","text":"Allows get misc project data parameters","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/getProjectData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data for project — getProjectData","text":"","code":"getProjectData(param)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/getProjectData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data for project — getProjectData","text":"param Project parameter gotten","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/list_kables.html","id":null,"dir":"Reference","previous_headings":"","what":"List tables with the same columns — list_kables","title":"List tables with the same columns — list_kables","text":"function print group tables together decently pretty way. May need bit finagling.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/list_kables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tables with the same columns — list_kables","text":"","code":"list_kables(tabs, bo = c(\"striped\", \"condensed\"), ...)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/list_kables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tables with the same columns — list_kables","text":"tabs list data frames tibbles number names columns bo boostrap options pass kableExtra ... options passed kable, caption, align, etc.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/list_kables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tables with the same columns — list_kables","text":"HTML Latex output pretty tables","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nLevelsP.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pretty number of levels — nLevelsP","title":"Get pretty number of levels — nLevelsP","text":"Just wrapper format(nlevels) big.mark = , trim = T","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nLevelsP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pretty number of levels — nLevelsP","text":"","code":"nLevelsP(x)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/nLevelsP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pretty number of levels — nLevelsP","text":"x factor","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nLevelsP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pretty number of levels — nLevelsP","text":"Number rows big.mark = , trim = T","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nrowP.html","id":null,"dir":"Reference","previous_headings":"","what":"Get pretty numbers of rows — nrowP","title":"Get pretty numbers of rows — nrowP","text":"Retrieve number rows dataframe matrix commas inserted nice reports.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nrowP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get pretty numbers of rows — nrowP","text":"","code":"nrowP(x)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/nrowP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get pretty numbers of rows — nrowP","text":"x data frame matrix","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/nrowP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get pretty numbers of rows — nrowP","text":"Number rows big.mark = , trim = T","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalr.html","id":null,"dir":"Reference","previous_headings":"","what":"Pretty p-values — pvalr","title":"Pretty p-values — pvalr","text":"function helps print p-values RMD output","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pretty p-values — pvalr","text":"","code":"pvalr(pvals, sig.limit = 0.001, digits = 3, html = FALSE, equal_sign = \"\")"},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pretty p-values — pvalr","text":"pvals vector numeric p-values sig.limit lower threshold print \"<sig.limit\" digits many digits print? html uses HTML symbol instead normal < symbol equal_sign character value append front p-value","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pretty p-values — pvalr","text":"character vector \"pretty\" p values","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalue.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function for p-value calculation in cida_table1 — pvalue","title":"Internal function for p-value calculation in cida_table1 — pvalue","text":"Internal function p-value calculation cida_table1","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function for p-value calculation in cida_table1 — pvalue","text":"","code":"pvalue(   x,   name,   ...,   include_total = include_total,   nonParametricVars = nonParametricVars )"},{"path":"https://cida-csph.github.io/CIDAtools/reference/pvalue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function for p-value calculation in cida_table1 — pvalue","text":"x row_variable name variables name ... arguments passed S3 methods include_total indicator whether overall variable summaries included table. Used ensure p-values computed across grouped variables. nonParametricVars vector names variables use non-parametric hypothesis testing","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/randblinder_shiny_tool.html","id":null,"dir":"Reference","previous_headings":"","what":"Randomizer and blinder tool — randblinder_shiny_tool","title":"Randomizer and blinder tool — randblinder_shiny_tool","text":"See inst/ folder main code function","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/randblinder_shiny_tool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Randomizer and blinder tool — randblinder_shiny_tool","text":"","code":"randblinder_shiny_tool()"},{"path":"https://cida-csph.github.io/CIDAtools/reference/read_xlsx_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in xlsx with fill colour — read_xlsx_color","title":"Read in xlsx with fill colour — read_xlsx_color","text":"Reads fill colour excel workbooks. Creates data frame sheet list mutliple sheets requested. Creates colour column colour column specified.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/read_xlsx_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in xlsx with fill colour — read_xlsx_color","text":"","code":"read_xlsx_color(file, colorColumns, sheet = NULL, header = T)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/read_xlsx_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in xlsx with fill colour — read_xlsx_color","text":"file path file intend read. Can xls xlsx format. colorColumns column numbers want read colour, multiple sheets pass list sheet (see details). colour columns pass zero. sheet NULL(default) sheets otherwise vector sheet numbers names read. header 1st row read header? defaults T.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/read_xlsx_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in xlsx with fill colour — read_xlsx_color","text":"data frame one sheet list data frames multiple sheets","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/read_xlsx_color.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in xlsx with fill colour — read_xlsx_color","text":"colourColumns pass list numeric vectors sheet. example 2 sheets colourColumns = list(c(1,2), c(3)) columns 1 2 first sheet 3 second. list colourColumns shorter sheets remaining sheets assumed colour columns. list colour columns longer first n elements used n number sheets warning.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/removeAnalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Default Analyst from ~/.Rprofile — removeAnalyst","title":"Remove Default Analyst from ~/.Rprofile — removeAnalyst","text":"function removes default analyst set setAnalyst() users .Rprofile. entry .Rprofile remove file well.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/removeAnalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Default Analyst from ~/.Rprofile — removeAnalyst","text":"","code":"removeAnalyst(quiet = F)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/removeAnalyst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Default Analyst from ~/.Rprofile — removeAnalyst","text":"quiet message indicating result returned, TRUE return TRUE FALSE","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/removeAnalyst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Default Analyst from ~/.Rprofile — removeAnalyst","text":"Message indicating sucess failue","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/setAnalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Default Analyst Value — setAnalyst","title":"Set Default Analyst Value — setAnalyst","text":"function allows set option CIDAtools.analyst permanently (change reinstall CIDAtools) simultanesouly change default New Cida Project Template.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/setAnalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Default Analyst Value — setAnalyst","text":"","code":"setAnalyst(AnalystName)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/setAnalyst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Default Analyst Value — setAnalyst","text":"AnalystName string containing analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/setAnalyst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Default Analyst Value — setAnalyst","text":"message stating name changed.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/setPermanentAnalyst.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Default Analyst Value — setPermanentAnalyst","title":"Set Default Analyst Value — setPermanentAnalyst","text":"internal function writes Default Analyst name users Rprofile.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/setPermanentAnalyst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Default Analyst Value — setPermanentAnalyst","text":"","code":"setPermanentAnalyst(Name)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/setPermanentAnalyst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Default Analyst Value — setPermanentAnalyst","text":"Name string containing analyst name","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum ignoring NAs — sum_ignore_NA","title":"Sum ignoring NAs — sum_ignore_NA","text":"sum values returning NA values NA, otherise ignore","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum ignoring NAs — sum_ignore_NA","text":"","code":"sum_ignore_NA(...)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum ignoring NAs — sum_ignore_NA","text":"... numbers vectors summed. Must type logical numeric.","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum ignoring NAs — sum_ignore_NA","text":"numeric vector length arguments","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sum ignoring NAs — sum_ignore_NA","text":"function provide vectorized sums NAs ignored unless NAs present","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/sum_ignore_NA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum ignoring NAs — sum_ignore_NA","text":"","code":"# ignores NA sum_ignore_NA(2, 3, NA) #> [1] 5 # returns NA if all values are NA sum_ignore_NA(NA, NA, NA) #> [1] NA  # returns vectorized sums  x <- c(1, 2, NA) y <- c(1:3) sum_xy <- sum_ignore_NA(x, y) data.frame(x, y, sum_xy) #>    x y sum_xy #> 1  1 1      2 #> 2  2 2      4 #> 3 NA 3      3  x <- c(1, 2, NA) y <- c(1, 2, NA) sum_xy <- sum_ignore_NA(x, y) data.frame(x, y, sum_xy) #>    x  y sum_xy #> 1  1  1      2 #> 2  2  2      4 #> 3 NA NA     NA"},{"path":"https://cida-csph.github.io/CIDAtools/reference/vec_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Vectorized power estimates — vec_power","title":"Vectorized power estimates — vec_power","text":"function allows use power.t.test, power.prop.test, etc vectorized fashion return table results","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/vec_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vectorized power estimates — vec_power","text":"","code":"vec_power(fun = stats::power.t.test, ...)"},{"path":"https://cida-csph.github.io/CIDAtools/reference/vec_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vectorized power estimates — vec_power","text":"fun power calculating function; <function> ... arguments power calculating function assigned `fun`;","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/vec_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vectorized power estimates — vec_power","text":"tibble results","code":""},{"path":"https://cida-csph.github.io/CIDAtools/reference/vec_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vectorized power estimates — vec_power","text":"","code":"# single non-vectorized output vec_power(fun = power.t.test, n = 100, delta = 1, sd = 1, sig.level = 0.05) #>     n delta sd sig.level     power alternative                        note #> 1 100     1  1      0.05 0.9999998   two.sided n is number in *each* group #>                                method #> 1 Two-sample t test power calculation  # multiple vectorized output vec_power(fun = power.t.test, n = 80:100, delta = 1, sd = 1, sig.level = 0.05) #>      n delta sd sig.level     power alternative                        note #> 1   80     1  1      0.05 0.9999924   two.sided n is number in *each* group #> 2   81     1  1      0.05 0.9999937   two.sided n is number in *each* group #> 3   82     1  1      0.05 0.9999947   two.sided n is number in *each* group #> 4   83     1  1      0.05 0.9999956   two.sided n is number in *each* group #> 5   84     1  1      0.05 0.9999963   two.sided n is number in *each* group #> 6   85     1  1      0.05 0.9999969   two.sided n is number in *each* group #> 7   86     1  1      0.05 0.9999974   two.sided n is number in *each* group #> 8   87     1  1      0.05 0.9999979   two.sided n is number in *each* group #> 9   88     1  1      0.05 0.9999982   two.sided n is number in *each* group #> 10  89     1  1      0.05 0.9999985   two.sided n is number in *each* group #> 11  90     1  1      0.05 0.9999988   two.sided n is number in *each* group #> 12  91     1  1      0.05 0.9999990   two.sided n is number in *each* group #> 13  92     1  1      0.05 0.9999992   two.sided n is number in *each* group #> 14  93     1  1      0.05 0.9999993   two.sided n is number in *each* group #> 15  94     1  1      0.05 0.9999994   two.sided n is number in *each* group #> 16  95     1  1      0.05 0.9999995   two.sided n is number in *each* group #> 17  96     1  1      0.05 0.9999996   two.sided n is number in *each* group #> 18  97     1  1      0.05 0.9999997   two.sided n is number in *each* group #> 19  98     1  1      0.05 0.9999997   two.sided n is number in *each* group #> 20  99     1  1      0.05 0.9999998   two.sided n is number in *each* group #> 21 100     1  1      0.05 0.9999998   two.sided n is number in *each* group #>                                 method #> 1  Two-sample t test power calculation #> 2  Two-sample t test power calculation #> 3  Two-sample t test power calculation #> 4  Two-sample t test power calculation #> 5  Two-sample t test power calculation #> 6  Two-sample t test power calculation #> 7  Two-sample t test power calculation #> 8  Two-sample t test power calculation #> 9  Two-sample t test power calculation #> 10 Two-sample t test power calculation #> 11 Two-sample t test power calculation #> 12 Two-sample t test power calculation #> 13 Two-sample t test power calculation #> 14 Two-sample t test power calculation #> 15 Two-sample t test power calculation #> 16 Two-sample t test power calculation #> 17 Two-sample t test power calculation #> 18 Two-sample t test power calculation #> 19 Two-sample t test power calculation #> 20 Two-sample t test power calculation #> 21 Two-sample t test power calculation  # every combination of arguments vectorized output vec_power(fun = power.t.test, n = 90:100, delta = 1, sd = seq(0, 1, length=10), sig.level = 0.05) #>       n delta        sd sig.level     power alternative #> 1    90     1 0.0000000      0.05 1.0000000   two.sided #> 2    91     1 0.0000000      0.05 1.0000000   two.sided #> 3    92     1 0.0000000      0.05 1.0000000   two.sided #> 4    93     1 0.0000000      0.05 1.0000000   two.sided #> 5    94     1 0.0000000      0.05 1.0000000   two.sided #> 6    95     1 0.0000000      0.05 1.0000000   two.sided #> 7    96     1 0.0000000      0.05 1.0000000   two.sided #> 8    97     1 0.0000000      0.05 1.0000000   two.sided #> 9    98     1 0.0000000      0.05 1.0000000   two.sided #> 10   99     1 0.0000000      0.05 1.0000000   two.sided #> 11  100     1 0.0000000      0.05 1.0000000   two.sided #> 12   90     1 0.1111111      0.05 1.0000000   two.sided #> 13   91     1 0.1111111      0.05 1.0000000   two.sided #> 14   92     1 0.1111111      0.05 1.0000000   two.sided #> 15   93     1 0.1111111      0.05 1.0000000   two.sided #> 16   94     1 0.1111111      0.05 1.0000000   two.sided #> 17   95     1 0.1111111      0.05 1.0000000   two.sided #> 18   96     1 0.1111111      0.05 1.0000000   two.sided #> 19   97     1 0.1111111      0.05 1.0000000   two.sided #> 20   98     1 0.1111111      0.05 1.0000000   two.sided #> 21   99     1 0.1111111      0.05 1.0000000   two.sided #> 22  100     1 0.1111111      0.05 1.0000000   two.sided #> 23   90     1 0.2222222      0.05 1.0000000   two.sided #> 24   91     1 0.2222222      0.05 1.0000000   two.sided #> 25   92     1 0.2222222      0.05 1.0000000   two.sided #> 26   93     1 0.2222222      0.05 1.0000000   two.sided #> 27   94     1 0.2222222      0.05 1.0000000   two.sided #> 28   95     1 0.2222222      0.05 1.0000000   two.sided #> 29   96     1 0.2222222      0.05 1.0000000   two.sided #> 30   97     1 0.2222222      0.05 1.0000000   two.sided #> 31   98     1 0.2222222      0.05 1.0000000   two.sided #> 32   99     1 0.2222222      0.05 1.0000000   two.sided #> 33  100     1 0.2222222      0.05 1.0000000   two.sided #> 34   90     1 0.3333333      0.05 1.0000000   two.sided #> 35   91     1 0.3333333      0.05 1.0000000   two.sided #> 36   92     1 0.3333333      0.05 1.0000000   two.sided #> 37   93     1 0.3333333      0.05 1.0000000   two.sided #> 38   94     1 0.3333333      0.05 1.0000000   two.sided #> 39   95     1 0.3333333      0.05 1.0000000   two.sided #> 40   96     1 0.3333333      0.05 1.0000000   two.sided #> 41   97     1 0.3333333      0.05 1.0000000   two.sided #> 42   98     1 0.3333333      0.05 1.0000000   two.sided #> 43   99     1 0.3333333      0.05 1.0000000   two.sided #> 44  100     1 0.3333333      0.05 1.0000000   two.sided #> 45   90     1 0.4444444      0.05 1.0000000   two.sided #> 46   91     1 0.4444444      0.05 1.0000000   two.sided #> 47   92     1 0.4444444      0.05 1.0000000   two.sided #> 48   93     1 0.4444444      0.05 1.0000000   two.sided #> 49   94     1 0.4444444      0.05 1.0000000   two.sided #> 50   95     1 0.4444444      0.05 1.0000000   two.sided #> 51   96     1 0.4444444      0.05 1.0000000   two.sided #> 52   97     1 0.4444444      0.05 1.0000000   two.sided #> 53   98     1 0.4444444      0.05 1.0000000   two.sided #> 54   99     1 0.4444444      0.05 1.0000000   two.sided #> 55  100     1 0.4444444      0.05 1.0000000   two.sided #> 56   90     1 0.5555556      0.05 1.0000000   two.sided #> 57   91     1 0.5555556      0.05 1.0000000   two.sided #> 58   92     1 0.5555556      0.05 1.0000000   two.sided #> 59   93     1 0.5555556      0.05 1.0000000   two.sided #> 60   94     1 0.5555556      0.05 1.0000000   two.sided #> 61   95     1 0.5555556      0.05 1.0000000   two.sided #> 62   96     1 0.5555556      0.05 1.0000000   two.sided #> 63   97     1 0.5555556      0.05 1.0000000   two.sided #> 64   98     1 0.5555556      0.05 1.0000000   two.sided #> 65   99     1 0.5555556      0.05 1.0000000   two.sided #> 66  100     1 0.5555556      0.05 1.0000000   two.sided #> 67   90     1 0.6666667      0.05 1.0000000   two.sided #> 68   91     1 0.6666667      0.05 1.0000000   two.sided #> 69   92     1 0.6666667      0.05 1.0000000   two.sided #> 70   93     1 0.6666667      0.05 1.0000000   two.sided #> 71   94     1 0.6666667      0.05 1.0000000   two.sided #> 72   95     1 0.6666667      0.05 1.0000000   two.sided #> 73   96     1 0.6666667      0.05 1.0000000   two.sided #> 74   97     1 0.6666667      0.05 1.0000000   two.sided #> 75   98     1 0.6666667      0.05 1.0000000   two.sided #> 76   99     1 0.6666667      0.05 1.0000000   two.sided #> 77  100     1 0.6666667      0.05 1.0000000   two.sided #> 78   90     1 0.7777778      0.05 1.0000000   two.sided #> 79   91     1 0.7777778      0.05 1.0000000   two.sided #> 80   92     1 0.7777778      0.05 1.0000000   two.sided #> 81   93     1 0.7777778      0.05 1.0000000   two.sided #> 82   94     1 0.7777778      0.05 1.0000000   two.sided #> 83   95     1 0.7777778      0.05 1.0000000   two.sided #> 84   96     1 0.7777778      0.05 1.0000000   two.sided #> 85   97     1 0.7777778      0.05 1.0000000   two.sided #> 86   98     1 0.7777778      0.05 1.0000000   two.sided #> 87   99     1 0.7777778      0.05 1.0000000   two.sided #> 88  100     1 0.7777778      0.05 1.0000000   two.sided #> 89   90     1 0.8888889      0.05 1.0000000   two.sided #> 90   91     1 0.8888889      0.05 1.0000000   two.sided #> 91   92     1 0.8888889      0.05 1.0000000   two.sided #> 92   93     1 0.8888889      0.05 1.0000000   two.sided #> 93   94     1 0.8888889      0.05 1.0000000   two.sided #> 94   95     1 0.8888889      0.05 1.0000000   two.sided #> 95   96     1 0.8888889      0.05 1.0000000   two.sided #> 96   97     1 0.8888889      0.05 1.0000000   two.sided #> 97   98     1 0.8888889      0.05 1.0000000   two.sided #> 98   99     1 0.8888889      0.05 1.0000000   two.sided #> 99  100     1 0.8888889      0.05 1.0000000   two.sided #> 100  90     1 1.0000000      0.05 0.9999988   two.sided #> 101  91     1 1.0000000      0.05 0.9999990   two.sided #> 102  92     1 1.0000000      0.05 0.9999992   two.sided #> 103  93     1 1.0000000      0.05 0.9999993   two.sided #> 104  94     1 1.0000000      0.05 0.9999994   two.sided #> 105  95     1 1.0000000      0.05 0.9999995   two.sided #> 106  96     1 1.0000000      0.05 0.9999996   two.sided #> 107  97     1 1.0000000      0.05 0.9999997   two.sided #> 108  98     1 1.0000000      0.05 0.9999997   two.sided #> 109  99     1 1.0000000      0.05 0.9999998   two.sided #> 110 100     1 1.0000000      0.05 0.9999998   two.sided #>                            note                              method #> 1   n is number in *each* group Two-sample t test power calculation #> 2   n is number in *each* group Two-sample t test power calculation #> 3   n is number in *each* group Two-sample t test power calculation #> 4   n is number in *each* group Two-sample t test power calculation #> 5   n is number in *each* group Two-sample t test power calculation #> 6   n is number in *each* group Two-sample t test power calculation #> 7   n is number in *each* group Two-sample t test power calculation #> 8   n is number in *each* group Two-sample t test power calculation #> 9   n is number in *each* group Two-sample t test power calculation #> 10  n is number in *each* group Two-sample t test power calculation #> 11  n is number in *each* group Two-sample t test power calculation #> 12  n is number in *each* group Two-sample t test power calculation #> 13  n is number in *each* group Two-sample t test power calculation #> 14  n is number in *each* group Two-sample t test power calculation #> 15  n is number in *each* group Two-sample t test power calculation #> 16  n is number in *each* group Two-sample t test power calculation #> 17  n is number in *each* group Two-sample t test power calculation #> 18  n is number in *each* group Two-sample t test power calculation #> 19  n is number in *each* group Two-sample t test power calculation #> 20  n is number in *each* group Two-sample t test power calculation #> 21  n is number in *each* group Two-sample t test power calculation #> 22  n is number in *each* group Two-sample t test power calculation #> 23  n is number in *each* group Two-sample t test power calculation #> 24  n is number in *each* group Two-sample t test power calculation #> 25  n is number in *each* group Two-sample t test power calculation #> 26  n is number in *each* group Two-sample t test power calculation #> 27  n is number in *each* group Two-sample t test power calculation #> 28  n is number in *each* group Two-sample t test power calculation #> 29  n is number in *each* group Two-sample t test power calculation #> 30  n is number in *each* group Two-sample t test power calculation #> 31  n is number in *each* group Two-sample t test power calculation #> 32  n is number in *each* group Two-sample t test power calculation #> 33  n is number in *each* group Two-sample t test power calculation #> 34  n is number in *each* group Two-sample t test power calculation #> 35  n is number in *each* group Two-sample t test power calculation #> 36  n is number in *each* group Two-sample t test power calculation #> 37  n is number in *each* group Two-sample t test power calculation #> 38  n is number in *each* group Two-sample t test power calculation #> 39  n is number in *each* group Two-sample t test power calculation #> 40  n is number in *each* group Two-sample t test power calculation #> 41  n is number in *each* group Two-sample t test power calculation #> 42  n is number in *each* group Two-sample t test power calculation #> 43  n is number in *each* group Two-sample t test power calculation #> 44  n is number in *each* group Two-sample t test power calculation #> 45  n is number in *each* group Two-sample t test power calculation #> 46  n is number in *each* group Two-sample t test power calculation #> 47  n is number in *each* group Two-sample t test power calculation #> 48  n is number in *each* group Two-sample t test power calculation #> 49  n is number in *each* group Two-sample t test power calculation #> 50  n is number in *each* group Two-sample t test power calculation #> 51  n is number in *each* group Two-sample t test power calculation #> 52  n is number in *each* group Two-sample t test power calculation #> 53  n is number in *each* group Two-sample t test power calculation #> 54  n is number in *each* group Two-sample t test power calculation #> 55  n is number in *each* group Two-sample t test power calculation #> 56  n is number in *each* group Two-sample t test power calculation #> 57  n is number in *each* group Two-sample t test power calculation #> 58  n is number in *each* group Two-sample t test power calculation #> 59  n is number in *each* group Two-sample t test power calculation #> 60  n is number in *each* group Two-sample t test power calculation #> 61  n is number in *each* group Two-sample t test power calculation #> 62  n is number in *each* group Two-sample t test power calculation #> 63  n is number in *each* group Two-sample t test power calculation #> 64  n is number in *each* group Two-sample t test power calculation #> 65  n is number in *each* group Two-sample t test power calculation #> 66  n is number in *each* group Two-sample t test power calculation #> 67  n is number in *each* group Two-sample t test power calculation #> 68  n is number in *each* group Two-sample t test power calculation #> 69  n is number in *each* group Two-sample t test power calculation #> 70  n is number in *each* group Two-sample t test power calculation #> 71  n is number in *each* group Two-sample t test power calculation #> 72  n is number in *each* group Two-sample t test power calculation #> 73  n is number in *each* group Two-sample t test power calculation #> 74  n is number in *each* group Two-sample t test power calculation #> 75  n is number in *each* group Two-sample t test power calculation #> 76  n is number in *each* group Two-sample t test power calculation #> 77  n is number in *each* group Two-sample t test power calculation #> 78  n is number in *each* group Two-sample t test power calculation #> 79  n is number in *each* group Two-sample t test power calculation #> 80  n is number in *each* group Two-sample t test power calculation #> 81  n is number in *each* group Two-sample t test power calculation #> 82  n is number in *each* group Two-sample t test power calculation #> 83  n is number in *each* group Two-sample t test power calculation #> 84  n is number in *each* group Two-sample t test power calculation #> 85  n is number in *each* group Two-sample t test power calculation #> 86  n is number in *each* group Two-sample t test power calculation #> 87  n is number in *each* group Two-sample t test power calculation #> 88  n is number in *each* group Two-sample t test power calculation #> 89  n is number in *each* group Two-sample t test power calculation #> 90  n is number in *each* group Two-sample t test power calculation #> 91  n is number in *each* group Two-sample t test power calculation #> 92  n is number in *each* group Two-sample t test power calculation #> 93  n is number in *each* group Two-sample t test power calculation #> 94  n is number in *each* group Two-sample t test power calculation #> 95  n is number in *each* group Two-sample t test power calculation #> 96  n is number in *each* group Two-sample t test power calculation #> 97  n is number in *each* group Two-sample t test power calculation #> 98  n is number in *each* group Two-sample t test power calculation #> 99  n is number in *each* group Two-sample t test power calculation #> 100 n is number in *each* group Two-sample t test power calculation #> 101 n is number in *each* group Two-sample t test power calculation #> 102 n is number in *each* group Two-sample t test power calculation #> 103 n is number in *each* group Two-sample t test power calculation #> 104 n is number in *each* group Two-sample t test power calculation #> 105 n is number in *each* group Two-sample t test power calculation #> 106 n is number in *each* group Two-sample t test power calculation #> 107 n is number in *each* group Two-sample t test power calculation #> 108 n is number in *each* group Two-sample t test power calculation #> 109 n is number in *each* group Two-sample t test power calculation #> 110 n is number in *each* group Two-sample t test power calculation"}]
